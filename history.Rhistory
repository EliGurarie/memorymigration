lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-90, dm, expression(d widehat(u[m])(t)/dt), pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-90, dm, expression(d,widehat(u[m])(t)/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, , pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-90, dm, expression(d~widehat(u[m])(t)/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, , pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-90, dm, expression(dwidehat(u[m])(t)/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, , pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-90, dm, expression(d{}widehat(u[m])(t)/dt), pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-90, dm, expression(d~widehat(u[m])(t)/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, , pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])(t)/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, , pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, widehat(u)(t), pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)),col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l")
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
png("figures/")
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
#png("figures/")
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
#png("figures/")
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d,widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
#png("figures/")
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d{widehat(u[m])/dt}), pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
#png("figures/")
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d\,widehat(u[m])/dt), pos = 3, col = grey(.3))
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
#png("figures/")
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
png("figures/MemoryVelocity.png", width = 2400, height = 1800, res = 300)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
dev.off()
dev.off()
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
png("figures/MemoryVelocity.png", width = 2400, height = 1800, res = 300)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
dev.off()
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
png("figures/MemoryVelocity.png", width = 1600, height = 1200, res = 300)
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
dev.off()
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
png("figures/MemoryVelocity.png", width = 1600, height = 1000, res = 300)
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)")
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
dev.off()
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
png("figures/MemoryVelocity.png", width = 1600, height = 1000, res = 300)
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)", ylim = c(0,45))
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
dev.off()
require(memorymigration)
x <- -100:100
m.hat <- 40
dm <- 5
beta <- 20
lambda <- 40
v1 <- getMemoryVelocity(x, m.hat, dm, beta = 20, lambda = 40)
v2 <- getMemoryVelocity(x, m.hat, dm, beta = 100, lambda = 40)
v3 <- getMemoryVelocity(x, m.hat, dm, beta = 5, lambda = 40)
png("figures/MemoryVelocity.png", width = 1600, height = 1000, res = 300)
par(mar = c(3,3,1,1), tck = 0.01, mgp = c(1.5,.25,0), bty = "l",
cex.lab = 1.25, las = 1)
plot(x, v1, typ = "l", lwd = 2, ylab= "memory velocity v(t)",
col = "darkred", xlab = "spatial domain (x)", ylim = c(0,45))
lines(x, v2, col = "darkgreen", lwd = 2)
lines(x, v3, col = "darkblue", lwd = 2)
segments(-100,dm,100,dm, col = "darkgrey", lty = 3, lwd = 2)
abline(v = m.hat, col = "darkgrey", lty = 3, lwd = 2)
points(m.hat, dm, bg = "darkgrey", pch= 21, cex = 1.5)
legend("topright", col = c("darkblue", "darkred", "darkgreen"),
title = expression(beta), lwd = 2, legend = c(5,20,100))
text(-85, dm, expression(d~widehat(u[m])/dt), pos = 3, col = grey(.3))
text(m.hat, lambda, expression(widehat(u)(t)), pos = 2, col = grey(.3), xpd = NA)
dev.off()
history
history()
savehistory("~/research/memorymigration/history.Rhistory")
