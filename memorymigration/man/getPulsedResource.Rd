% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/getPulsedResource.R
\name{getPulsedResource}
\alias{getPulsedResource}
\title{Get Pulsed Resource}
\usage{
getPulsedResource(world, par)
}
\arguments{
\item{world}{object (e.g. from getSinePop) containing at minimum tau, X and X.max}

\item{par}{vector with four values: t.peak (which is the maximum peak of t), 
t.sd (which is the standard deviation of t), x.peak (which is the maximum peak of x),
and x.sd (which is the standard deviation of x)}
}
\value{
A X x X matrix containing values of the resource distribution
}
\description{
This function generates a a seasonal resource function with the following properties:
1. The total amount of resource across space is constant throughout the year.
2. At the beginning, middle, and end of the year the resource is uniformly distributed. 
3. At some peak time $t_r < tau/2$, the resource concentrates at a location $x_r < chi/2$
 with a spatial deviation $sigma_x$ and a temporal deviation $sigma_t$ (where $tau$ 
 is the length of the year and $chi$ is the extent of the spatial domain).
4. The resource peaks exactly symmetrically at time $tau - t_r$ and location 
$chi - x_r$ with the same variance $sigma_r$.
}
\details{
To generate a resource with these properties, we distributing the resource in 
space as a beta distribution, where the two shape and scale parameters vary 
sinusoidally in such a way as to fulfill the criteria above.
}
\examples{
## Worlds
world <- getSinePop(tau = 100, X.min = 0, X.max = 100, dx=1, 
                       peak.max = 20, peak.min = 20, sd = 10)
save(world, file = "memorymigration/data/world.rda")


## Fixed (bimodal) resource example

        fr1 <- dnorm(world$X, mean = 80, sd = 10) \%>\% {./sum(.)/world$dx}
        fr2 <- dnorm(world$X, mean = 20, sd = 10) \%>\% {./sum(.)/world$dx}
        fixed_Resource <- matrix((fr1 + fr2)/2, byrow = TRUE, 
                         nrow = nrow(world$pop), 
                         ncol = ncol(world$pop))
        image(fixed_Resource)

## Drifting resource
        
        t.sds <- seq(3,15,3)
        x.sds <- seq(3,15,3)
        
        require(plyr)
        tx.sds<- expand.grid(t.sds, x.sds) \%>\% plyr::rename(c(Var1 = "t.sd", Var2 = "x.sd")) \%>\% 
                mutate(combination = paste0("R_t",t.sd,"_x",x.sd))
        R_drifting <- dlply(tx.sds, "combination",
              function(df) getPulsedResource(world, par = c(t.peak = 25, t.sd = df$t.sd, 
                                                            x.peak = 75, x.sd = df$x.sd)))
        save(R_drifting, file = "memorymigration/data/resources_drifting.rda")
        
        par(mfrow = c(2,2))
        with(R_drifting, {
                image(R_t3_x3) 
                image(R_t3_x12) 
                image(R_t12_x3) 
                image(R_t12_x12) 
        })

## Independent (Island) resource
        
        t.sds <- seq(3,15,3)
        x.sds <- seq(3,15,3)
        
        require(plyr)
        tx.sds<- expand.grid(t.sds, x.sds) \%>\% plyr::rename(c(Var1 = "t.sd", Var2 = "x.sd")) \%>\% 
                mutate(combination = paste0("R_t",t.sd,"_x",x.sd))
        R_island <- dlply(tx.sds, "combination",
                            function(df) getPulsedResource_v2(world, par = c(t.peak = 25, t.sd = df$t.sd, 
                                                                          x.peak = 75, x.sd = df$x.sd)))
       save(R_island, file = "memorymigration/data/resources_island.rda")
        
        par(mfrow = c(2,2))
        with(R_island, {
                image(R_t6_x6) 
                image(R_t6_x12) 
                image(R_t12_x6) 
                image(R_t12_x12) 
        })
        
}
