% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/functions_indices.R
\name{computeMigratoriness}
\alias{computeMigratoriness}
\title{Compute Migratoriness}
\usage{
computeMigratoriness(pop, world)
}
\arguments{
\item{pop}{One cycle of population process}

\item{world}{world object}
}
\value{
a list with the time of the minimal overlap and the Migratoriness 
(MI) index
}
\description{
Returns an migratoriness index of a population by comparing the overlap 
overlap of the population from two different times within the year, 
choosing those times to minimize the overlap, and reporting the 
overall overlap.
}
\examples{
# Initialize world

dx <- 2

parameters <- c(epsilon = 5, alpha = 300, beta0=100, beta1 = 300)
world.R1 <- getSinePop(tau = 100, X.min = 0, X.max = 100, dx=2, 
                    peak.max = 80, peak.min = 20, sd = 10)
world.R1$resource <- getPulsedResource(world$time, world$X, c(t.peak = 25, t.sd = 9, 
                                                           x.peak = 80, x.sd = 9))


# run simulation 12 years

M <- runManyYears(world.R1, Parameters = parameters, n.years = 6)
plotYearList(M, tau = tau)

pop <- world$pop
resource <- world$resource

world.R1 <- world \%>\% list_modify(pop = M$Year6)
M2 <- runManyYears(world.R1, Parameters = parameters, n.years = 6)
plotYearList(M2, tau = tau)

computeCohesiveness(world$pop, world)["SC.mean"]
computeMigratoriness(world$pop, world)$overlap
computeEfficiency(world$pop, world$resource, world)
computeIndices(world$pop, world$resource, world)
computeIndices(M[[2]], world$resource, world)
}
\seealso{
\link{computeEfficiency}, \link{computeCohesiveness}, \link{computeIndices}
}
