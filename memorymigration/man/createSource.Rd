% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/generateScripts.R
\name{createSource}
\alias{createSource}
\title{Create Sources}
\usage{
createSource(
  worldname = "world",
  resourcename,
  code.dir,
  filename,
  results.dir,
  epsilon,
  depsilon,
  alpha,
  dalpha,
  beta0,
  dbeta0,
  beta1,
  dbeta1
)
}
\arguments{
\item{worldname}{string containing name of the world}

\item{resourcename}{string containing name of resource}

\item{filename}{string containing base name of the file to be created}

\item{epsilon}{maximum value of epsilon parameter}

\item{depsilon}{a factor of the value of epsilon to 
indicate the different values of epsilon as a parameter. Then the epsilon values 
evaluated in the model will be 0:epsilon in equal steps of this difference value.
Set this value as 0 if only value of epsilon should be evaluated}

\item{alpha}{maximum value of alpha parameter}

\item{dalpha}{a factor of the value of alpha to 
indicate the different values of alpha as a parameter. Then the alpha values 
evaluated in the model will be 0:alpha in equal steps of this difference value.
Set this value as 0 if only value of alpha should be evaluated}

\item{beta0}{maximum value of beta0 parameter}

\item{dbeta0}{a factor of the value of beta0 to 
indicate the different values of beta0 as a parameter. Then the beta0 values 
evaluated in the model will be 0:beta0 in equal steps of this difference value.
Set this value as 0 if only value of beta0 should be evaluated}

\item{beta1}{maximum value of beta0 parameter}

\item{dbeta1}{a factor of the value of beta1 to 
indicate the different values of beta1 as a parameter. Then the beta1 values 
evaluated in the model will be 0:beta1 in equal steps of this difference value.
Set this value as 0 if only value of beta1 should be evaluated}

\item{directory}{string containing directory of where file will be created}
}
\value{
creates .R files with scripts
}
\description{
Generates R.scripts to run many different parameters of the same model
}
\examples{
require(memorymigration)
data(world); data(resources)
parameters.df = data.frame( epsilon=seq(1, 100, length = 2), 
                            alpha=1000, beta0=100, beta1=200)
world$resource <-  resource_R1 
results <- runManyRuns(parameters.df, world)
save(results, file =paste0('scripttest/results/run1.rda'))
}
\seealso{
\link{createShellScript}, \link{parameterGrid}
}
