Modeling tactical and memory-driven migration in dynamic environments
========================================================
author: Sriya Potluri and Elie Gurarie
date: March 2021
autosize: true
transition: none
width: 1600
height: 900



```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = FALSE, cache = TRUE, message = FALSE, warning = FALSE)
```


Premise
========================================================

To optimally forage in a dynamic environment, you need both **tactical** responses (adapting to local changes in resource gradients), and **strategic** responses (using memory to guide long-term decisions). 

***



Model
========================================================

$${\frac{\partial u(x,t)}{\partial t}} = -\varepsilon {\frac{\partial^2 u(x,t)}{\partial x^2}} + \alpha \frac{\partial h(x,t)}{\partial x} + \sum_{i = 0}^n \beta_i \frac{\partial u(x, t - i\tau)}{\partial x}$$

- $\epsilon$: diffusion, exploration / search
- $\alpha$: taxis, resource following
- $\beta_0$: cohesion, tendency to stick to group
- $\beta_1$: memory, tendency to do what was done previous year

Seasonal resource
========================================================

$$R(x,t, \theta) = \chi B(x/\chi, a(t, \theta), b(t, \theta))$$

<!-- make short--> 

1. The total amount constant.
2. At the beginning, middle, and end of the year the resource is uniformly distributed. 
3. At some peak time $t_r < \tau/2$, the resource concentrates at a location $x_r < \chi/2$ 
4. The resource peaks exactly symmetrically at time $\tau - t_r$ and location $\chi - x_r$ with the same variance $\sigma_r$.
(where $\tau$ is the length of the year and $\chi$ is the extent of the spatial domain)

***

![](images/exampleResourcePlots-1.png)


Running the model 
==========================

- R package `deSolve` and `ReacTran` - fluid transport pde solvers.
- Functions all in `memorymigration` GitHub project. 
- SESYNC cluster 
- server-based Rstudio


Example run: with Memory and Sociality
==============================

$\epsilon =20; \alpha = 200; \beta_0 = 250; \beta_1 = 250$

```{r, eval = FALSE}
data(resources)
data(world)
world$resource <- resource_R2

eval <- FALSE
if(eval){
  sim <- runManyYears(world, parameters = c(epsilon = 20, alpha = 200,  beta0 = 250, beta1 = 250), n.years = 20, threshold = 0.995)
  save(sim, file = "images/Sim_withMemory.rda")
}
load("images/Sim_withMemory.rda")

png("images/Sim_withMemory.png", width = 2400, height = 1200, res = 300)
par(mfrow = c(1,5))
image.plot(resource_R2)
for(i in 1:4){
  image(1:100, 1:100, sim[[i]], xlab = "Time", main = paste("Year", i))
}
dev.off()

```
![](images/Sim_withMemory.png)


Example run: no Sociality, only Memory
==============================
$\epsilon =20; \alpha = 200; \beta_0 = 0; \beta_1 = 250$

```{r, eval = FALSE}
data(resources)
data(world)
world$resource <- resource_R2

eval <- FALSE
if(eval){
  sim <- runManyYears(world, parameters = c(epsilon = 20, alpha = 200,  beta0 = 0, beta1 = 250), n.years = 20, threshold = 0.995)
  save(sim, file = "images/Sim_onlyMemory.rda")
}
load("images/Sim_onlyMemory.rda")

png("images/Sim_onlyMemory.png", width = 2400, height = 1200, res = 300)
par(mfrow = c(1,5))
image.plot(resource_R2)
for(i in 1:4){
  image(1:100, 1:100, sim[[i]], xlab = "Time", main = paste("Year", i))
}
dev.off()

```
![](images/Sim_onlyMemory.png)

Example run: no Memory, only Sociality
==============================
$\epsilon =20; \alpha = 200; \beta_0 = 250; \beta_1 = 0$

```{r, eval = FALSE}
data(resources)
data(world)
world$resource <- resource_R2

eval <- FALSE
if(eval){
  sim <- runManyYears(world, parameters = c(epsilon = 20, alpha = 200,  beta0 = 250, beta1 = 0), n.years = 20, threshold = 0.995)
  save(sim, file = "images/Sim_noMemory.rda")
}
load("images/Sim_noMemory.rda")

png("images/Sim_noMemory.png", width = 2400, height = 1200, res = 300)
par(mfrow = c(1,5))
image.plot(resource_R2)
for(i in 1:4){
  image(1:100, 1:100, sim[[i]], xlab = "Time", main = paste("Year", i))
}
dev.off()

```
![](images/Sim_noMemory.png)

Comparing Examples
==============================

```{r, out.width = "33%"}
include_graphics(c("images/Sim_withMemory.png","images/Sim_onlyMemory.png", "images/Sim_noMemory.png"))

``` 
1. Memory and Sociality
2. Only Memory
3. Only Sociality

Metrics
======================


1. Social Cohesiveness
2. Foraging Efficiency
3. Migratoriness


Metrics: Cohesiveness (problematic!)
==========================
$$SC = 1-\frac{\sqrt{12} \, }{X_{max}}\overline{\sigma}$$

$$\overline{\sigma} = {1\over \tau} \int \sigma_u(x,t) \,dt$$
where $$\sigma_u^2(t) = \int_D \left(x - \mu_u(t)\right)^2 \, u(x,t)\, dx$$

and $\mu_u$ is the mean of $u$ at time $t$.

Definition: The mean standard deviation of the population across the equilibrium year

***

```{r SC_example}
require(memorymigration)
data(resources)
par(mfrow = c(2,1), mar = c(3,3,3,1), mgp = c(2,.25,0), las = 1, tck = 0.01)

image(1:100,1:100,resource_R2, main = "SC = 0.36")
contour(1:100,1:100,resource_R2, add = TRUE)
#computeCohesiveness(resource_R2, world)

image(1:100,1:100,resource_R3, main = "SC = 0.11")
contour(1:100,1:100,resource_R3, add = TRUE)

#computeCohesiveness(resource_R3, world)
  
```



Social Cohesiveness: Problem
=========================


For skewed of bimodal population distribution, standard deviation are a poor measure ...
$\epsilon = 8; \alpha = 200; \beta_0 = 500; \beta_1 = 0$

```{r badSCexample, cache = TRUE, fig.width = 10, eval = FALSE}
load("images/Sim1.rda")
png("images/BadSC.png", width = 2400, height = 1200, res = 300)
par(mfrow = c(1,2), bty  = "l", mgp = c(1.5,.5,0), tck = 0.01)
require(fields)
computeCohesiveness(sim[[length(sim)]], world)
image.plot(sim[[length(sim)]], main = "looks cohesive, but SC = 0.01")
snapshot <- sim[[length(sim)]][75,]
plot(snapshot, type = "l", main = "because bimodal (t = 75).", ylab = "")
dev.off()
```

![](images/BadSC.png)

**Not sure how to deal with this ...**


Metrics: Foraging Efficiency 
==========================
$$FE = {1\over \tau} \int_{0}^\tau \int_{0}^{X_{max}} \sqrt{u(x,t) \, h(x,t)} \, dx\,dt$$

**Bhattacharyya Coefficient** quantifies similarity between two distributions.

```{r, eval = FALSE}
load("images/Sim1.rda")
png("images/FEexample.png", width = 2400, height = 1200, res = 300)
par(mfrow = c(1,2), bty  = "l", mgp = c(1.5,.5,0), tck = 0.01)
require(fields)
image.plot(1:100, 1:100, resource_R2, main = "Resource", xlab = "time", ylab = "space")
image.plot(1:100, 1:100, sim[[length(sim)]], main = "Population: FE = 0.82", xlab = "time")
dev.off()

computeEfficiency(resource_R2, sim[[length(sim)]], world)
```
***
$\epsilon = 8; \alpha = 200; \beta_0 = 500; \beta_1 = 0$ 
![](images/FEexample.png)


Metrics: Foraging Efficiency - Issues
==========================

Seems to always be very high!

Also - assumes that there is some sort of space inhibition ... the actually highest efficiency is when animals pile in at indefinitely high density at the location of highest resource availability. 

***

![](images/FEexample.png)


Metrics: Migratoriness
========================
$$MI = 1-min(O(t_1, t_2))$$
$$O(t_1, t_2) = \int_D \sqrt{u(x, t_1) \, u(x, t_2)} \, dx $$

Definition: We calculate overlap of the population from two different times within the year, choosing those times to minimize the overlap, and reporting the overall overlap. We find the values of $t_1$ and $t_2$ that minimize $O$, corresponding to the periods of maximum distance and subtract to calculate migratoriness. 

```{r, eval = FALSE}
load("images/Sim1.rda")
png("images/MIexample.png", width = 2400, height = 1200, res = 300)
par(mfrow = c(1,2), bty  = "l", mgp = c(1.5,.5,0), tck = 0.01)
require(fields)
image.plot(1:100, 1:100, resource_R2, main = "Resource", xlab = "time", ylab = "space")
image.plot(1:100, 1:100, sim[[length(sim)]], main = "Population: MI = 0.07", xlab = "time")
dev.off()

computeEfficiency(resource_R2, sim[[length(sim)]], world)
```
***
$\epsilon = 8; \alpha = 200; \beta_0 = 500; \beta_1 = 0$
![](images/MIexample.png)


Questions that this model can answer: 
======================


Q1. What's the "best" parameter combination to maximize FE - how does that affect Migratoriness and Cohesiveness - under various resource scenarios.

Q2. Can migration emerge from a non-migratory initial condition? 

Q3. As conditions CHANGE, how resilient is the population at various Diffusion, Advection, Cohesion, Memory values?  
- spatial drift
- temporal drift
- increased variability

***

![](images/brainstorm.png)




